using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;

namespace QUANLYVATTU
{
    public partial class SubFormDDH : DevExpress.XtraEditors.XtraForm
    {
        public SubFormDDH()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
        }

        private void SubFormDDH_Load(object sender, EventArgs e)
        {
            this.datHangTableAdapter.Connection.ConnectionString = Program.connectionString;
            this.khoTableAdapter.Connection.ConnectionString = Program.connectionString;
            this.datHangTableAdapter.Fill(this.dataSetServer2.DatHang);
            this.khoTableAdapter.Fill(this.dataSetServer2.Kho);
            this.datHangBindingSource.DataSource = Program.formNhanvien.getDatHangBDS();
        }
        private void SubFormDDH_Shown(object sender, EventArgs e)
        {
            this.datHangBindingSource.AddNew();
            //set truoc 2 truong ma nhan vien va date time
            ((DataRowView)datHangBindingSource[datHangBindingSource.Position])["MANV"] = Program.manv;
            ((DataRowView)datHangBindingSource[datHangBindingSource.Position])["NGAY"] = DateTime.Today;
            tbMaKho.Text = ((DataRowView)khoBindingSource[khoBindingSource.Position])["MAKHO"].ToString().Trim();
        }

        private void gcKho_Click(object sender, EventArgs e)
        {
            if (khoBindingSource.Position != -1) //Trường hợp không có dữ liệu
            {
                tbMaKho.Text = gridViewKho.GetRowCellValue(khoBindingSource.Position, "MAKHO").ToString().Trim();
            }
        }
        private bool checkValidate(TextBox tb, string str)
        {
            if (tb.Text.Trim().Equals(""))
            {
                MessageBox.Show(str, "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                tb.Focus();
                return false;
            }
            return true;
        }
        private void btnOk_Click(object sender, EventArgs e)
        {

            if (!checkValidate(tbMaDDH, "Mã DDH is not empty!")) return;
            if (!checkValidate(tbNCC, "Nhà cung cấp is not empty!")) return;
            if (!checkValidate(tbMaKho, "Mã Kho is not empty!")) return;
            int positionMaDDH = datHangBindingSource.Find("MasoDDH", tbMaDDH.Text);
            int postionCurrent = datHangBindingSource.Position;
            ((DataRowView)datHangBindingSource[datHangBindingSource.Position])["MasoDDH"] = this.tbMaDDH.Text;
            ((DataRowView)datHangBindingSource[datHangBindingSource.Position])["NhaCC"] = this.tbNCC.Text;
            try { 
            this.datHangBindingSource.EndEdit();
            this.datHangTableAdapter.Update(Program.formNhanvien.getDataSet().DatHang);
            this.Close();
        }
                    catch (Exception ex)
                    {
                        MessageBox.Show("Ghi dữ liệu thất lại. Vui lòng kiểm tra lại!\n" + ex.Message, "Error",
                            MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
}

    
    }
}